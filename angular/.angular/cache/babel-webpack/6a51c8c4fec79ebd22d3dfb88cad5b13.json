{"ast":null,"code":"import _asyncToGenerator from \"D:\\\\WorkSpace\\\\DepotGithub\\\\P12\\\\P12\\\\angular\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { FileAPI } from 'src/app/_class/file-api';\nimport { Publication } from 'src/app/_class/publication';\nlet UpdatePublicationComponent = class UpdatePublicationComponent {\n  constructor(router, route, publicationService, uploadS3Service, tokenStorage) {\n    this.router = router;\n    this.route = route;\n    this.publicationService = publicationService;\n    this.uploadS3Service = uploadS3Service;\n    this.tokenStorage = tokenStorage;\n    this.publication = new Publication();\n    this.files = [];\n    this.myForm = new FormGroup({\n      contenu: new FormControl('', [Validators.required, Validators.minLength(3)]),\n      file: new FormControl()\n    });\n    this.cheminImage = 'https://testp12.s3.eu-west-3.amazonaws.com/';\n    this.fileAPI = new FileAPI();\n  }\n\n  ngOnInit() {\n    this.id = this.route.snapshot.params['id'];\n    this.getPublicationById(this.id);\n  }\n\n  getPublicationById(id) {\n    this.publicationService.getPublicationById(id).subscribe(data => {\n      this.publication = data;\n    });\n  }\n\n  onSubmit() {\n    this.publicationService.updatePublication(this.id, this.publication).subscribe(data => {\n      this.publication = data;\n      this.goToPublicationPublic();\n    }, error => console.log(error));\n  }\n\n  goToPublicationPublic() {\n    this.router.navigate(['home']);\n  }\n\n  onFileChange(event) {\n    for (var i = 0; i < event.target.files.length; i++) {\n      this.files.push(event.target.files[i]);\n    }\n  }\n\n  newFileUpdate() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      for (let i = 0; i < _this.files.length; i += 1) {\n        let file = _this.files[i];\n        let filePath = \"image/\" + file.name; //s3\n\n        try {\n          console.log(\"request upload file \" + filePath); //s3\n\n          let response = yield _this.uploadS3Service.uploadFileS3(file, filePath);\n        } catch (error) {\n          console.log(\"erreur lors de l'envoie de la publication\");\n        } //api\n\n\n        _this.fileAPI.name = file.name;\n        _this.fileAPI.url = _this.cheminImage + filePath;\n        console.log('fileAPI updated ' + _this.fileAPI);\n\n        _this.publication.listFile.push(_this.fileAPI);\n      }\n\n      _this.files = [];\n\n      _this.createPubAPI(_this.publication);\n    })();\n  }\n\n  createPubAPI(publicationRequest) {\n    //le contenu \n    console.log('publicationRequest', publicationRequest);\n    this.publication.contenu = this.myForm.controls['contenu'].value; //l'user \n\n    this.currentUser = this.tokenStorage.getUser();\n    this.publication.username = this.currentUser.username;\n    console.log('publication ', this.publication);\n    this.publicationService.createPublication(this.publication).subscribe(data => {\n      console.log(\"data created \" + data);\n    });\n    window.location.reload();\n  }\n\n};\nUpdatePublicationComponent = __decorate([Component({\n  selector: 'app-update-publication',\n  templateUrl: './update-publication.component.html',\n  styleUrls: ['./update-publication.component.css']\n})], UpdatePublicationComponent);\nexport { UpdatePublicationComponent };","map":{"version":3,"sources":["D:/WorkSpace/DepotGithub/P12/P12/angular/src/app/_components/update-publication/update-publication.component.ts"],"names":["__decorate","Component","FormControl","FormGroup","Validators","FileAPI","Publication","UpdatePublicationComponent","constructor","router","route","publicationService","uploadS3Service","tokenStorage","publication","files","myForm","contenu","required","minLength","file","cheminImage","fileAPI","ngOnInit","id","snapshot","params","getPublicationById","subscribe","data","onSubmit","updatePublication","goToPublicationPublic","error","console","log","navigate","onFileChange","event","i","target","length","push","newFileUpdate","filePath","name","response","uploadFileS3","url","listFile","createPubAPI","publicationRequest","controls","value","currentUser","getUser","username","createPublication","window","location","reload","selector","templateUrl","styleUrls"],"mappings":"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","sourcesContent":["import { __decorate } from \"tslib\";\r\nimport { Component } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { FileAPI } from 'src/app/_class/file-api';\r\nimport { Publication } from 'src/app/_class/publication';\r\nlet UpdatePublicationComponent = class UpdatePublicationComponent {\r\n    constructor(router, route, publicationService, uploadS3Service, tokenStorage) {\r\n        this.router = router;\r\n        this.route = route;\r\n        this.publicationService = publicationService;\r\n        this.uploadS3Service = uploadS3Service;\r\n        this.tokenStorage = tokenStorage;\r\n        this.publication = new Publication();\r\n        this.files = [];\r\n        this.myForm = new FormGroup({\r\n            contenu: new FormControl('', [\r\n                Validators.required,\r\n                Validators.minLength(3),\r\n            ]),\r\n            file: new FormControl(),\r\n        });\r\n        this.cheminImage = 'https://testp12.s3.eu-west-3.amazonaws.com/';\r\n        this.fileAPI = new FileAPI();\r\n    }\r\n    ngOnInit() {\r\n        this.id = this.route.snapshot.params['id'];\r\n        this.getPublicationById(this.id);\r\n    }\r\n    getPublicationById(id) {\r\n        this.publicationService.getPublicationById(id).subscribe(data => {\r\n            this.publication = data;\r\n        });\r\n    }\r\n    onSubmit() {\r\n        this.publicationService.updatePublication(this.id, this.publication).subscribe(data => {\r\n            this.publication = data;\r\n            this.goToPublicationPublic();\r\n        }, error => console.log(error));\r\n    }\r\n    goToPublicationPublic() {\r\n        this.router.navigate(['home']);\r\n    }\r\n    onFileChange(event) {\r\n        for (var i = 0; i < event.target.files.length; i++) {\r\n            this.files.push(event.target.files[i]);\r\n        }\r\n    }\r\n    async newFileUpdate() {\r\n        for (let i = 0; i < this.files.length; i += 1) {\r\n            let file = this.files[i];\r\n            let filePath = \"image/\" + file.name;\r\n            //s3\r\n            try {\r\n                console.log(\"request upload file \" + filePath);\r\n                //s3\r\n                let response = await this.uploadS3Service.uploadFileS3(file, filePath);\r\n            }\r\n            catch (error) {\r\n                console.log(\"erreur lors de l'envoie de la publication\");\r\n            }\r\n            //api\r\n            this.fileAPI.name = file.name;\r\n            this.fileAPI.url = this.cheminImage + filePath;\r\n            console.log('fileAPI updated ' + this.fileAPI);\r\n            this.publication.listFile.push(this.fileAPI);\r\n        }\r\n        this.files = [];\r\n        this.createPubAPI(this.publication);\r\n    }\r\n    createPubAPI(publicationRequest) {\r\n        //le contenu \r\n        console.log('publicationRequest', publicationRequest);\r\n        this.publication.contenu = this.myForm.controls['contenu'].value;\r\n        //l'user \r\n        this.currentUser = this.tokenStorage.getUser();\r\n        this.publication.username = this.currentUser.username;\r\n        console.log('publication ', this.publication);\r\n        this.publicationService\r\n            .createPublication(this.publication)\r\n            .subscribe((data) => {\r\n            console.log(\"data created \" + data);\r\n        });\r\n        window.location.reload();\r\n    }\r\n};\r\nUpdatePublicationComponent = __decorate([\r\n    Component({\r\n        selector: 'app-update-publication',\r\n        templateUrl: './update-publication.component.html',\r\n        styleUrls: ['./update-publication.component.css']\r\n    })\r\n], UpdatePublicationComponent);\r\nexport { UpdatePublicationComponent };\r\n"]},"metadata":{},"sourceType":"module"}