{"ast":null,"code":"import _asyncToGenerator from \"D:\\\\WorkSpace\\\\DepotGithub\\\\P12\\\\P12\\\\angular\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { FileAPI } from 'src/app/_class/file-api';\nimport { Publication } from 'src/app/_class/publication';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/_services/publication.service\";\nimport * as i3 from \"src/app/_services/upload-s3.service\";\nimport * as i4 from \"src/app/_services/token-storage.service\";\nimport * as i5 from \"@angular/forms\";\nexport class UpdatePublicationComponent {\n  constructor(router, route, publicationService, uploadS3Service, tokenStorage) {\n    this.router = router;\n    this.route = route;\n    this.publicationService = publicationService;\n    this.uploadS3Service = uploadS3Service;\n    this.tokenStorage = tokenStorage;\n    this.publication = new Publication();\n    this.files = [];\n    this.myForm = new FormGroup({\n      contenu: new FormControl('', [Validators.required, Validators.minLength(3)]),\n      file: new FormControl()\n    });\n    this.cheminImage = 'https://testp12.s3.eu-west-3.amazonaws.com/';\n    this.fileAPI = new FileAPI();\n  }\n\n  ngOnInit() {\n    this.id = this.route.snapshot.params['id'];\n    this.getPublicationById(this.id);\n  }\n\n  getPublicationById(id) {\n    this.publicationService.getPublicationById(id).subscribe(data => {\n      this.publication = data;\n    });\n  }\n\n  onSubmit() {\n    this.publicationService.updatePublication(this.id, this.publication).subscribe(data => {\n      this.publication = data;\n      this.goToPublicationPublic();\n    }, error => console.log(error));\n  }\n\n  goToPublicationPublic() {\n    this.router.navigate(['home']);\n  }\n\n  onFileChange(event) {\n    for (var i = 0; i < event.target.files.length; i++) {\n      this.files.push(event.target.files[i]);\n    }\n  }\n\n  newFileUpdate() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      for (let i = 0; i < _this.files.length; i += 1) {\n        let file = _this.files[i];\n        let filePath = \"image/\" + file.name; //s3\n\n        try {\n          console.log(\"request upload file \" + filePath); //s3\n\n          let response = yield _this.uploadS3Service.uploadFileS3(file, filePath);\n        } catch (error) {\n          console.log(\"erreur lors de l'envoie de la publication\");\n        } //api\n\n\n        _this.fileAPI.name = file.name;\n        _this.fileAPI.url = _this.cheminImage + filePath;\n        console.log('fileAPI updated ' + _this.fileAPI);\n\n        _this.publication.listFile.push(_this.fileAPI);\n      }\n\n      _this.files = [];\n\n      _this.createPubAPI(_this.publication);\n    })();\n  }\n\n  createPubAPI(publicationRequest) {\n    //le contenu \n    console.log('publicationRequest', publicationRequest);\n    this.publication.contenu = this.myForm.controls['contenu'].value; //l'user \n\n    this.currentUser = this.tokenStorage.getUser();\n    this.publication.username = this.currentUser.username;\n    console.log('publication ', this.publication);\n    this.publicationService.createPublication(this.publication).subscribe(data => {\n      console.log(\"data created \" + data);\n    });\n    window.location.reload();\n  }\n\n}\n\nUpdatePublicationComponent.ɵfac = function UpdatePublicationComponent_Factory(t) {\n  return new (t || UpdatePublicationComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.PublicationService), i0.ɵɵdirectiveInject(i3.UploadS3Service), i0.ɵɵdirectiveInject(i4.TokenStorageService));\n};\n\nUpdatePublicationComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UpdatePublicationComponent,\n  selectors: [[\"app-update-publication\"]],\n  decls: 11,\n  vars: 1,\n  consts: [[1, \"cadre\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"contenu\"], [\"formControlName\", \"contenu\", \"id\", \"contenu\", \"type\", \"text\", \"placeholder\", \"Partagez vos experiences\", 1, \"form-control\", \"content\"], [\"for\", \"file\"], [\"formControlName\", \"file\", \"id\", \"file\", \"type\", \"file\", \"multiple\", \"\", 1, \"form-control\", 3, \"change\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"button\"]],\n  template: function UpdatePublicationComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function UpdatePublicationComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.newFileUpdate();\n      });\n      i0.ɵɵelementStart(1, \"div\", 1);\n      i0.ɵɵelementStart(2, \"label\", 2);\n      i0.ɵɵtext(3, \"Exprimez vous : \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"input\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 1);\n      i0.ɵɵelementStart(6, \"label\", 4);\n      i0.ɵɵtext(7, \"Ajoutez des fichiers \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"input\", 5);\n      i0.ɵɵlistener(\"change\", function UpdatePublicationComponent_Template_input_change_8_listener($event) {\n        return ctx.onFileChange($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"button\", 6);\n      i0.ɵɵtext(10, \"Partager\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.myForm);\n    }\n  },\n  directives: [i5.ɵNgNoValidate, i5.NgControlStatusGroup, i5.FormGroupDirective, i5.DefaultValueAccessor, i5.NgControlStatus, i5.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ1cGRhdGUtcHVibGljYXRpb24uY29tcG9uZW50LmNzcyJ9 */\"]\n});","map":{"version":3,"sources":["D:/WorkSpace/DepotGithub/P12/P12/angular/src/app/_components/update-publication/update-publication.component.ts"],"names":["FormControl","FormGroup","Validators","FileAPI","Publication","i0","i1","i2","i3","i4","i5","UpdatePublicationComponent","constructor","router","route","publicationService","uploadS3Service","tokenStorage","publication","files","myForm","contenu","required","minLength","file","cheminImage","fileAPI","ngOnInit","id","snapshot","params","getPublicationById","subscribe","data","onSubmit","updatePublication","goToPublicationPublic","error","console","log","navigate","onFileChange","event","i","target","length","push","newFileUpdate","filePath","name","response","uploadFileS3","url","listFile","createPubAPI","publicationRequest","controls","value","currentUser","getUser","username","createPublication","window","location","reload","ɵfac","UpdatePublicationComponent_Factory","t","ɵɵdirectiveInject","Router","ActivatedRoute","PublicationService","UploadS3Service","TokenStorageService","ɵcmp","ɵɵdefineComponent","type","selectors","decls","vars","consts","template","UpdatePublicationComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","UpdatePublicationComponent_Template_form_ngSubmit_0_listener","ɵɵtext","ɵɵelementEnd","ɵɵelement","UpdatePublicationComponent_Template_input_change_8_listener","$event","ɵɵproperty","directives","ɵNgNoValidate","NgControlStatusGroup","FormGroupDirective","DefaultValueAccessor","NgControlStatus","FormControlName","styles"],"mappings":"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","sourcesContent":["import { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { FileAPI } from 'src/app/_class/file-api';\r\nimport { Publication } from 'src/app/_class/publication';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/router\";\r\nimport * as i2 from \"src/app/_services/publication.service\";\r\nimport * as i3 from \"src/app/_services/upload-s3.service\";\r\nimport * as i4 from \"src/app/_services/token-storage.service\";\r\nimport * as i5 from \"@angular/forms\";\r\nexport class UpdatePublicationComponent {\r\n    constructor(router, route, publicationService, uploadS3Service, tokenStorage) {\r\n        this.router = router;\r\n        this.route = route;\r\n        this.publicationService = publicationService;\r\n        this.uploadS3Service = uploadS3Service;\r\n        this.tokenStorage = tokenStorage;\r\n        this.publication = new Publication();\r\n        this.files = [];\r\n        this.myForm = new FormGroup({\r\n            contenu: new FormControl('', [\r\n                Validators.required,\r\n                Validators.minLength(3),\r\n            ]),\r\n            file: new FormControl(),\r\n        });\r\n        this.cheminImage = 'https://testp12.s3.eu-west-3.amazonaws.com/';\r\n        this.fileAPI = new FileAPI();\r\n    }\r\n    ngOnInit() {\r\n        this.id = this.route.snapshot.params['id'];\r\n        this.getPublicationById(this.id);\r\n    }\r\n    getPublicationById(id) {\r\n        this.publicationService.getPublicationById(id).subscribe(data => {\r\n            this.publication = data;\r\n        });\r\n    }\r\n    onSubmit() {\r\n        this.publicationService.updatePublication(this.id, this.publication).subscribe(data => {\r\n            this.publication = data;\r\n            this.goToPublicationPublic();\r\n        }, error => console.log(error));\r\n    }\r\n    goToPublicationPublic() {\r\n        this.router.navigate(['home']);\r\n    }\r\n    onFileChange(event) {\r\n        for (var i = 0; i < event.target.files.length; i++) {\r\n            this.files.push(event.target.files[i]);\r\n        }\r\n    }\r\n    async newFileUpdate() {\r\n        for (let i = 0; i < this.files.length; i += 1) {\r\n            let file = this.files[i];\r\n            let filePath = \"image/\" + file.name;\r\n            //s3\r\n            try {\r\n                console.log(\"request upload file \" + filePath);\r\n                //s3\r\n                let response = await this.uploadS3Service.uploadFileS3(file, filePath);\r\n            }\r\n            catch (error) {\r\n                console.log(\"erreur lors de l'envoie de la publication\");\r\n            }\r\n            //api\r\n            this.fileAPI.name = file.name;\r\n            this.fileAPI.url = this.cheminImage + filePath;\r\n            console.log('fileAPI updated ' + this.fileAPI);\r\n            this.publication.listFile.push(this.fileAPI);\r\n        }\r\n        this.files = [];\r\n        this.createPubAPI(this.publication);\r\n    }\r\n    createPubAPI(publicationRequest) {\r\n        //le contenu \r\n        console.log('publicationRequest', publicationRequest);\r\n        this.publication.contenu = this.myForm.controls['contenu'].value;\r\n        //l'user \r\n        this.currentUser = this.tokenStorage.getUser();\r\n        this.publication.username = this.currentUser.username;\r\n        console.log('publication ', this.publication);\r\n        this.publicationService\r\n            .createPublication(this.publication)\r\n            .subscribe((data) => {\r\n            console.log(\"data created \" + data);\r\n        });\r\n        window.location.reload();\r\n    }\r\n}\r\nUpdatePublicationComponent.ɵfac = function UpdatePublicationComponent_Factory(t) { return new (t || UpdatePublicationComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.PublicationService), i0.ɵɵdirectiveInject(i3.UploadS3Service), i0.ɵɵdirectiveInject(i4.TokenStorageService)); };\r\nUpdatePublicationComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: UpdatePublicationComponent, selectors: [[\"app-update-publication\"]], decls: 11, vars: 1, consts: [[1, \"cadre\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"contenu\"], [\"formControlName\", \"contenu\", \"id\", \"contenu\", \"type\", \"text\", \"placeholder\", \"Partagez vos experiences\", 1, \"form-control\", \"content\"], [\"for\", \"file\"], [\"formControlName\", \"file\", \"id\", \"file\", \"type\", \"file\", \"multiple\", \"\", 1, \"form-control\", 3, \"change\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"button\"]], template: function UpdatePublicationComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"form\", 0);\r\n        i0.ɵɵlistener(\"ngSubmit\", function UpdatePublicationComponent_Template_form_ngSubmit_0_listener() { return ctx.newFileUpdate(); });\r\n        i0.ɵɵelementStart(1, \"div\", 1);\r\n        i0.ɵɵelementStart(2, \"label\", 2);\r\n        i0.ɵɵtext(3, \"Exprimez vous : \");\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelement(4, \"input\", 3);\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementStart(5, \"div\", 1);\r\n        i0.ɵɵelementStart(6, \"label\", 4);\r\n        i0.ɵɵtext(7, \"Ajoutez des fichiers \");\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementStart(8, \"input\", 5);\r\n        i0.ɵɵlistener(\"change\", function UpdatePublicationComponent_Template_input_change_8_listener($event) { return ctx.onFileChange($event); });\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementStart(9, \"button\", 6);\r\n        i0.ɵɵtext(10, \"Partager\");\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementEnd();\r\n    } if (rf & 2) {\r\n        i0.ɵɵproperty(\"formGroup\", ctx.myForm);\r\n    } }, directives: [i5.ɵNgNoValidate, i5.NgControlStatusGroup, i5.FormGroupDirective, i5.DefaultValueAccessor, i5.NgControlStatus, i5.FormControlName], styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ1cGRhdGUtcHVibGljYXRpb24uY29tcG9uZW50LmNzcyJ9 */\"] });\r\n"]},"metadata":{},"sourceType":"module"}